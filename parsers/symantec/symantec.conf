# Licensed to empow under one or more contributor
# license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright
# ownership. empow licenses this file to you under
# the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

input {
  pipeline{
    address => symantec_pipeline
  }
}

filter {
  grok {
    match => { "message" => "%{NUMBER}\>%{SYSLOGTIMESTAMP} %{IP} %{GREEDYDATA:sepKeys}(?<filePath>\w\:\\[\\\w\-]+\\[\w\-\.\[\]]+),,{0,2}%{GREEDYDATA:sepKeys}Event time:\s(?<tmp_date>\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2}),%{GREEDYDATA:sepKeys}"
    }
  }
  kv {
    source => "sepKeys"
    field_split => ","
    value_split => ":"
    remove_field => ["sepKeys"]
  }

  date{
    match => ["tmp_date", "UNIX", "yyyy-MM-dd HH:mm:ss"]
    target => "@timestamp"
    remove_field => ["tmp_date"]
  }

  mutate {
    rename => {"SymantecServer" => "[event][category]"}
  }

  grok {
    match => { "message" => "(.*),%{GREEDYDATA:[event][action]},Application hash.*"}
  }

  mutate {
    rename => {"Computer name" =>  "[destination][hostname]"}
    rename => {"IP Address" => "[destination][ip]"}
    rename => {"User" => "[destination][user][name]"}
    rename => {"Occurrences" => "[event][hits]"}
    rename => {"Source" => "[event][type]"}
    rename => {"Application hash" =>  "[file][hash]"}
    rename => {"filePath" => "[file][path]"}
    rename => {"File size (bytes)" => "[file][size]"}
    rename => {"Server" => "[observer][hostname]"}
    rename => {"Downloaded by" => "[process][name]"}
    rename => {"Certificate signer" => "[process][signer]"}
    rename => {"Risk name" => "[threat][name]"}
    rename => {"Download site" => "[url][original]"}
  }

  if ([Web domain]=~/[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}/) {
    mutate{
      rename => {"Web domain" => "[source][ip]"}
    }
  }
  else{
    mutate{
      rename => {"Web domain" => "[source][hostname]"}
    }
  }

  ruby {
    code => "event.set('[file][name]', event.get('[file][path]').split('\\')[-1])"
  }

  translate {
    field => "[Actual action]"
    destination => "[event][response]"
    dictionary => {
      "Access denied" => "Block"
      "Action invalid" => "No Action"
      "All actions failed/Failed to repair" => "No Action"
      "Bad" => "Alert"
      "Cleaned" => "Delete"
      "Cleaned by deletion" => "Delete "
      "Cleaned or macros deleted" => "Delete "
      "Deleted or removed" => "Delete "
      "Excluded" => "No Action"
      "Left alone" => "No Action"
      "No repair available" => "No Action"
      "No repair available - Power Eraser recommended for repair" => "No Action"
      "Partially repaired" => "No Action"
      "Pending repair or Pending admin action" => "No Action"
      "Process terminated" => "Block"
      "Process termination pending restart" => "No Action"
      "Quarantined" => "Quarantine"
      "Restored" => "No Action"
      "Suspicious" => " Alert"
      "Threat blocked - Power Eraser recommended for repair" => "Block"
      "Restart required - Quarantined" => "Quarantine "
      "Restart required - Cleaned" => "Delete"
      "Left alone by Admin" => "No Action"
    }
    fallback => "Alret"
  }
 

  translate {
    field => "[Actual action]"
    destination => "[event][outcome]"
    dictionary => {
      "All actions failed/Failed to repair" => "fail"
      "Access denied" => "success"
      "Cleaned" => "success"
      "Cleaned by deletion" => "success "
      "Cleaned or macros deleted" => "success "
      "Deleted or removed" => "success "
      "Process terminated" => "success"
      "Quarantined" => "success"
      "Threat blocked - Power Eraser recommended for repair" => "success"
    }
    fallback => "null"
  } 


  translate {
    field => "[Disposition]"
    destination => "[event][verdict]"
    dictionary => {
      "Good" => "Benign"
      "Suspocious" => "Suspocious"
      "Bad" => "Malicious"
    }
    fallback => "null"
  } 



############## If ANTI VIRUS SERVICE related alert ###########################
  if [event][category] =~ "Virus found" {
    mutate {
      add_field => {
        "[observer][vendor]" => "Symantec"
        "[observer][product]" => "SEP-Anti-Virus"
        "[observer][type]" => "Anti Virus"
      }

    }
    mutate {
      add_field => {"[empow][malware_name]" => "%{[threat][name]}"}
      add_tag => ["empow_classification"]
    }
  }

############## If CUSTOM SERVICE related  alert ##############################
  elseif [event][category] =~ "Security risk found" {
    mutate {
      add_field => {
        "[observer][vendor]" => "Symantec"
        "[observer][product]" => "SEP-Security-Risk"
        "[observer][type]" => "Custom Service"
        "[threat][technique]" => "Custom Malicious Process"
      }
    }

  }
}



output{  
  pipeline{
    send_to => [elastic_output]
  }
}
